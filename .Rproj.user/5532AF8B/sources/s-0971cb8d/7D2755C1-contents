\name{fnmr_3i_rand_pval}
\alias{fnmr_3i_rand_pval}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{fnmr_3i_rand_pval
%%  ~~function to do ... ~~
}
\description{3 sample independent randomized
%%  ~~ A concise (1-5 lines) description of what the function does. ~~
}
\usage{
fnmr_3i_rand_pval(Dlist, nreps =1000)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{Dlist}{list of decisions
%%     ~~Describe \code{x} here~~
}
 \item{nreps}{ number of repetitions
%%     ~~Describe \code{x} here~~
}
}

\value{p value
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}

\examples{
testlist=list(cbind(B.G.g1.gen[,1],as.numeric(B.G.g1.gen[,35]< -0.75)),cbind(B.G.g2.gen[,1],as.numeric(B.G.g2.gen[,35]< -1)), cbind(lausanne.gen[,1],as.numeric(lausanne.gen[,4] < 0)))


fnmr_3i_rand_pval(testlist,nreps=1000)


## The function is currently defined as
function(Dlist,nreps=1000){
  delta=rep(0,length(Dlist))
  Fobs=fcalc3(Dlist,delta)
  print("F")
  print(Fobs)
  ###Extract list of individuals from each device
  Ilist=c(as.numeric(names(table(Dlist[[1]][,1]))))
  #Ilist is a list of all of the individuals
  G=length(Dlist)
  print("G");print(G)
  n.i=rep(0,G)
  #n.i is the number of individuals
  n.i[1]=length(Ilist)
  ###n.i is the number of individuals in each set of data
  for(h in 2:G)
  {
    Ilist=c(Ilist,as.numeric(names(table(Dlist[[h]][,1]))))
    n.i[h]=length(as.numeric(names(table(Dlist[[h]][,1]))))
  }
  #print("Ilist")
  print(n.i)
  ###Extract the coordinating group numbers of the individuals
  glist=rep(1,n.i[1])
  ###glist contains the group numbers of each individual
  for(i in 2:G)
  {
    glist=c(glist,rep(i,n.i[i]))
  }
  Iglist=cbind(glist,Ilist)
  #Dprime2 is a matrix of the group number of the specific individual and the individual
  #print(Iglist)
  Dprime2=matrix(Iglist,length(Ilist),2,byrow=FALSE)
  #print(Dprime2)
  ###Create a D2/randomize the groups
  G=length(Dlist)
  n.g=rep(0,G)
  for(j in 1:G)
  {
    n.g[j]=length(Dlist[[j]][,1])
  }
  #n.g is the length of each group
  k=nrow(Dprime2)
  Frand=rep(0,nreps)
  Frand[1]=Fobs
  #print("1.")
  for (n in 2:nreps)
  {

    D2=Dprime2[sample(1:k,k,replace=F),]
    ###D2 is a randomized matrix of the individuals
    #print(D2)
    D2a=list(D2[1:n.i[1],])
    #print(D2a)
    for (i in 2:G)
    {
      D2a=c(D2a,list(D2[(sum(n.i[1:(i-1)])+1):sum(n.i[1:i]),]))
    }
    #print("Dprime2")
    #print(Dprime2)
    #print("D2a")
    #print(D2a)
    ###sTEP 5 - Calculate Drand (spliting D2 up into the original length of the groups (n.i)
    xmat=as.matrix(Dlist[[D2a[[1]][1,1]]])
    #print("xmat")
    #print(xmat)
    xmat=xmat[xmat[,1]==D2a[[1]][1,2],]
    #print("frand:xmat")
    #print(xmat)
    xlen=NROW(xmat)
    #bs=sample(1:xlen,xlen,replace=TRUE)
    Drand=list(cbind(rep(1,xlen),xmat[,2]))
    #print("Dr")
    #print(Drand)
    for(ii in 2:n.i[1])
    {
      xmat=as.matrix(Dlist[[D2a[[1]][ii,1]]])
      xmat=xmat[xmat[,1]==D2a[[1]][ii,2],]
      #print("frand:xmat2")
      #print(xmat)
      xlen=NROW(xmat)
      #bs=sample(1:xlen,xlen,replace=TRUE)
      Drand[[1]]=rbind(Drand[[1]],cbind(rep(ii,xlen),xmat[,2]))
    }
    #print("Drand[[1]]")
    #print(Drand)
    for(g in 2:G)
    {
      xmat=as.matrix(Dlist[[D2a[[g]][1,1]]])
      #print(xmat)
      xmat=xmat[xmat[,1]==D2a[[g]][1,2],]
      #print("frand:xmat3")
      #print(xmat)
      xlen=NROW(xmat)
      #bs=sample(1:xlen,xlen,replace=TRUE)
      Drand=c(Drand,list(cbind(rep(1,xlen),xmat[,2])))
      #print(Drand)
      ###Drand is the partitioned, bootstrap of the randomized individuals and decisions.
      for(ii in 2:n.i[g])
      {
        xmat=as.matrix(Dlist[[ D2a[[g]][ii,1] ]])
        xmat=xmat[xmat[,1]==D2a[[g]][ii,2],]
        #print("frand:xmat4")
        #print(xmat)
        xlen=NROW(xmat)
        #bs=sample(1:xlen,xlen,replace=TRUE)
        Drand[[g]]=rbind(Drand[[g]],cbind(rep(ii,xlen),xmat[,2]))
      }
      #print(Drand[[g]])
    }
    ###Drand is a list of the randomized matrices split back up into the original n.g's


    #Step 7 - Find "F" random
    #print("huh")
    #print(Drand)
    Frand[n]=fcalc3(Drand,delta)

    #	print("Drand")
    #print(Drand)
  }



  #print(Frand)
  Pvalue=mean(as.numeric(Frand>=Fobs))
  hist(Frand,xlab="F-rand",nclass=40,main=" ")
  abline(v=Fobs,col="red",lwd=4,lty=3)
  #print(Fobs)
  print("Pvalue")
  print(Pvalue)
}
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory (show via RShowDoc("KEYWORDS")):
% \keyword{ ~kwd1 }
% \keyword{ ~kwd2 }
% Use only one keyword per line.
% For non-standard keywords, use \concept instead of \keyword:
% \concept{ ~cpt1 }
% \concept{ ~cpt2 }
% Use only one concept per line.
